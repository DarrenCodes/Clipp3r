// <auto-generated />
using System;
using Clipp3r.Infrastructure.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Clipp3r.Infrastructure.EntityFramework.Migrations
{
    [DbContext(typeof(Clipp3rDatabaseContext))]
    [Migration("20181125095159_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("Clipp3r.Core.Entities.VideoMetadata", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("LastClippedDate");

                    b.Property<string>("VideoFileName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("VideoMetadatas");
                });

            modelBuilder.Entity("Clipp3r.Core.Entities.VideoMoment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsActive");

                    b.Property<string>("VideoMomentName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("VideoMoments");
                });

            modelBuilder.Entity("Clipp3r.Core.Entities.VideoMomentCapture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsActive");

                    b.Property<Guid>("VideoMetadataGuid");

                    b.Property<long>("VideoMomentCaptureTime");

                    b.Property<Guid>("VideoMomentGuid");

                    b.HasKey("Id");

                    b.HasIndex("VideoMetadataGuid");

                    b.HasIndex("VideoMomentGuid");

                    b.ToTable("VideoMomentCaptures");
                });

            modelBuilder.Entity("Clipp3r.Core.Entities.VideoMomentCapture", b =>
                {
                    b.HasOne("Clipp3r.Core.Entities.VideoMetadata", "VideoMetadata")
                        .WithMany("VideoMomentCaptureList")
                        .HasForeignKey("VideoMetadataGuid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Clipp3r.Core.Entities.VideoMoment", "VideoMoment")
                        .WithMany()
                        .HasForeignKey("VideoMomentGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
